{"version":3,"sources":["components/Button.js","components/Link.js","Header.js","components/Card.js","components/Input.js","Hero.js","CardList.js","App.js","serviceWorker.js","index.js"],"names":["Button","styled","button","_templateObject","props","primary","Link","a","Link_templateObject","Header","react_default","createElement","className","role","aria-label","components_Link","href","components_Button","onClick","Card","div","Card_templateObject","Input","input","Input_templateObject","Hero","components_Card","components_Input","placeholder","type","CardList","list","data","map","i","key","title","location","date","tags","label","App","src_Header_0","src_Hero_0","src_CardList_0","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffaf84fa.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst primaryColor = \"rgb(250,114,104)\";\r\n\r\nconst Button = styled.button`\r\n  background: ${props => (props.primary ? primaryColor : \"white\")};\r\n  color: ${props => (props.primary ? \"white\" : primaryColor)};\r\n\r\n  font-size: 1em;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-weight: 500;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid ${primaryColor};\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  transition: ease 0.2s;\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 3pt rgba(250, 114, 104, 0.2);\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst primaryColor = \"rgb(250,114,104)\";\r\n\r\nconst Link = styled.a`\r\n  background: rgba(0, 0, 0, 0);\r\n  color: ${primaryColor};\r\n\r\n  font-size: 1em;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  font-weight: 500;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  text-decoration: none;\r\n  transition: ease 0.2s;\r\n\r\n  &:hover {\r\n    background: rgba(250, 114, 104, 0.1);\r\n  }\r\n`;\r\n\r\nexport default Link;\r\n","import React from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport Link from \"./components/Link\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"header-container\">\r\n        <span className=\"header-logo\">\r\n          <span role=\"img\" aria-label=\"drink\">\r\n            🍹\r\n          </span>\r\n          술동여지도\r\n        </span>\r\n        <span className=\"header-menu\">\r\n          <Link href=\"#\">메인으로</Link>\r\n          <Link href=\"#\">홍보하기</Link>\r\n          <Link href=\"#\">대관하기</Link>\r\n          <Link href=\"#\">술동이란?</Link>\r\n          <Button onClick={() => {}} primary>\r\n            로그인\r\n          </Button>\r\n        </span>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  background: white;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  box-shadow: 0 5px 10px -5px gray;\r\n  display: flex;\r\n`;\r\n\r\nexport default Card;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  background: white;\r\n  border: 2px solid #eee;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  font-size: 1em;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  color: #333;\r\n  padding: 3px 5px;\r\n  transition: ease 0.2s;\r\n\r\n  ::placeholder {\r\n    color: #666;\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 3pt rgba(104, 167, 250, 0.5);\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport Card from \"./components/Card\";\r\nimport Input from \"./components/Input\";\r\nimport \"./Hero.css\";\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <div className=\"hero\">\r\n      <div className=\"hero-container\">\r\n        <div className=\"hero-contents\">\r\n          <div className=\"hero-text\">\r\n            <h1>\r\n              뭔가 멋있는\r\n              <br />\r\n              카피문구\r\n            </h1>\r\n            <p>\r\n              Consequat tempor ad Lorem in veniam ipsum ea. Culpa ad id velit\r\n              eiusmod. Qui Lorem elit mollit consequat. Sint officia enim ad ex\r\n              veniam amet laborum duis magna et duis.\r\n            </p>\r\n          </div>\r\n          <div className=\"hero-button\">\r\n            <Button primary>더 알아보기</Button>\r\n            <Button>버튼</Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"hero-search\">\r\n          <Card>\r\n            <div className=\"hero-card-container\">\r\n              <form>\r\n                <Input placeholder=\"위치\" />\r\n                <Input type=\"date\" placeholder=\"날짜\" />\r\n                <Input placeholder=\"태그\" />\r\n                <Button primary>검색</Button>\r\n              </form>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport Card from \"./components/Card\";\r\nimport \"./CardList.css\";\r\n\r\nconst CardList = props => {\r\n  const list = props.data.map((data, i) => {\r\n    return (\r\n      <Card key={i}>\r\n        <h4>{data.title}</h4>\r\n        <p>{data.location}</p>\r\n        <p>{data.date}</p>\r\n        <p>{data.tags}</p>\r\n      </Card>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"cardList-container\">\r\n      <div className=\"cardList-label\">\r\n        <h3>{props.label}</h3>\r\n      </div>\r\n      <div className=\"cardList-list\">{list}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport Hero from \"./Hero\";\nimport CardList from \"./CardList\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    const tempAPI = [\n      {\n        title: \"연대일홉\",\n        location: \"신촌\",\n        date: \"2019-03-03\",\n        tags: [\"태그1\", \"태그2\", \"태그3\"]\n      },\n      {\n        title: \"고대일홉\",\n        location: \"안암\",\n        date: \"2019-03-03\",\n        tags: [\"태그2\", \"태그3\", \"태그4\"]\n      },\n      {\n        title: \"중대일홉\",\n        location: \"흑석\",\n        date: \"2019-03-04\",\n        tags: [\"태그3\", \"태그4\", \"태그5\"]\n      },\n      {\n        title: \"설대일홉\",\n        location: \"관악\",\n        date: \"2019-03-04\",\n        tags: [\"태그4\", \"태그5\", \"태그6\"]\n      },\n      {\n        title: \"연대일홉\",\n        location: \"신촌\",\n        date: \"2019-03-03\",\n        tags: [\"태그1\", \"태그2\", \"태그3\"]\n      },\n      {\n        title: \"고대일홉\",\n        location: \"안암\",\n        date: \"2019-03-03\",\n        tags: [\"태그2\", \"태그3\", \"태그4\"]\n      },\n      {\n        title: \"중대일홉\",\n        location: \"흑석\",\n        date: \"2019-03-04\",\n        tags: [\"태그3\", \"태그4\", \"태그5\"]\n      },\n      {\n        title: \"설대일홉\",\n        location: \"관악\",\n        date: \"2019-03-04\",\n        tags: [\"태그4\", \"태그5\", \"태그6\"]\n      },\n      {\n        title: \"연대일홉\",\n        location: \"신촌\",\n        date: \"2019-03-03\",\n        tags: [\"태그1\", \"태그2\", \"태그3\"]\n      },\n      {\n        title: \"고대일홉\",\n        location: \"안암\",\n        date: \"2019-03-03\",\n        tags: [\"태그2\", \"태그3\", \"태그4\"]\n      },\n      {\n        title: \"중대일홉\",\n        location: \"흑석\",\n        date: \"2019-03-04\",\n        tags: [\"태그3\", \"태그4\", \"태그5\"]\n      },\n      {\n        title: \"설대일홉\",\n        location: \"관악\",\n        date: \"2019-03-04\",\n        tags: [\"태그4\", \"태그5\", \"태그6\"]\n      }\n    ];\n    return (\n      <div>\n        <Header />\n        <Hero />\n        <CardList label=\"이번주 인기일홉\" data={tempAPI} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}